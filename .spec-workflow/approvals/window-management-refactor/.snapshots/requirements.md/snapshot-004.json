{
  "id": "snapshot_1758944671296_4auk3vkhj",
  "approvalId": "approval_1758944630578_1xdcsyui9",
  "approvalTitle": "窗口管理重构 - 需求文档（更新版）",
  "version": 4,
  "timestamp": "2025-09-27T03:44:31.296Z",
  "trigger": "approved",
  "status": "pending",
  "content": "# 需求文档\r\n\r\n## 介绍\r\n\r\n当前应用的窗口管理系统使用了手动拖拽方式，通过 DraggableArea 组件和自定义窗口操作来实现。这种方式带来了不必要的复杂性和性能问题。本次重构的目标是使用 Electron 原生的 BaseWindow 和 WebContentsView API 来实现更好的性能、更清晰的架构和更直观的窗口管理。\r\n\r\n重构将把应用重新构建为不同的视图区域：持久化的搜索头部和动态内容区域（设置、插件和搜索结果）。这将实现不同应用模式之间的无缝切换，同时保持适当的窗口生命周期管理。\r\n\r\n## 与产品愿景的一致性\r\n\r\n此功能通过以下方式支持技术基础目标：\r\n\r\n- 通过 Electron 原生 API 提高应用性能\r\n- 通过移除自定义窗口操作逻辑简化代码库\r\n- 通过更流畅的窗口交互增强用户体验\r\n- 在 UI 组件之间提供更好的关注点分离\r\n\r\n## 需求\r\n\r\n### 需求 1\r\n\r\n**用户故事：** 作为开发者，我希望使用 Electron 原生的 BaseWindow 和 WebContentsView API，以便窗口管理更高效且易于维护\r\n\r\n#### 验收标准\r\n\r\n1. 当应用启动时，系统应创建一个包含嵌入式 WebContentsView 组件的 BaseWindow\r\n2. 当用户拖拽搜索头部时，系统应使用原生 Electron 窗口拖拽而非自定义 JavaScript 实现\r\n3. 当管理子窗口时，系统应使用 WebContentsView 用于窗口内内容区域\r\n\r\n### 需求 2\r\n\r\n**用户故事：** 作为用户，我希望应用界面划分为清晰的区域（搜索头部和动态内容），以便我能够轻松理解和导航界面\r\n\r\n#### 验收标准\r\n\r\n1. 当应用加载时，系统应在顶部显示持久化的搜索头部\r\n2. 当我与不同功能交互时，系统应在搜索头部下方显示相应内容\r\n3. 当在模式间切换时，系统应保持搜索头部的可见性和功能\r\n\r\n### 需求 3\r\n\r\n**用户故事：** 作为用户，我希望通过搜索界面访问设置，以便在不丢失搜索上下文的情况下配置应用\r\n\r\n#### 验收标准\r\n\r\n1. 当我点击搜索头部的设置按钮时，系统应使用 WebContentsView 在搜索栏下方显示设置界面\r\n2. 当设置界面打开时，系统应保持搜索头部功能\r\n3. 当我关闭设置时，系统应返回到之前的内容视图\r\n\r\n### 需求 4\r\n\r\n**用户故事：** 作为用户，我希望插件界面能够无缝地显示在搜索栏下方，以便在不中断工作流程的情况下使用插件\r\n\r\n#### 验收标准\r\n\r\n1. 当我执行插件时，系统应使用 WebContentsView 在搜索栏下方显示插件界面\r\n2. 当插件激活时，系统应在主窗口移动时保持窗口跟随行为\r\n3. 当我关闭插件时，系统应仅关闭插件的 WebContentsView 同时保留其他应用状态\r\n\r\n### 需求 5\r\n\r\n**用户故事：** 作为用户，我希望窗口支持两种生命周期类型，以便插件能够根据配置选择退出行为\r\n\r\n#### 验收标准\r\n\r\n1. 当插件配置为\"退出时关闭\"模式时，系统应在插件退出后立即关闭对应的 WebContentsView\r\n2. 当插件配置为\"后台运行\"模式时，系统应在插件界面关闭时隐藏 WebContentsView 但保持插件进程运行\r\n3. 当重新打开后台运行的插件时，系统应显示已有的 WebContentsView 或重新连接到现有插件进程\r\n\r\n### 需求 5.1\r\n\r\n**用户故事：** 作为用户，我希望在不同插件间切换时界面响应迅速，以便流畅地使用多个插件\r\n\r\n#### 验收标准\r\n\r\n1. 当切换插件时，系统应通过切换 WebContentsView 而非创建新窗口来实现\r\n2. 当显示新插件时，系统应隐藏当前活跃的 WebContentsView 并显示目标插件的 WebContentsView\r\n3. 当插件的 WebContentsView 不存在时，系统应创建新的 WebContentsView 并加载插件内容\r\n\r\n### 需求 6\r\n\r\n**用户故事：** 作为用户，我希望能够将插件窗口分离到独立的浏览器窗口中，以便同时使用多个插件\r\n\r\n#### 验收标准\r\n\r\n1. 当我在插件界面中按下 Alt+D 时，系统应将插件分离到独立的浏览器窗口\r\n2. 当插件被分离时，系统应创建一个包含控制栏和插件内容的新窗口\r\n3. 当分离的插件窗口关闭时，系统应正确清理分离窗口的资源\r\n\r\n### 需求 7\r\n\r\n**用户故事：** 作为开发者，我希望有一个集中的窗口管理类，以便窗口生命周期和状态管理保持一致且易于维护\r\n\r\n#### 验收标准\r\n\r\n1. 当管理窗口时，系统应使用单一的 WindowManager 类进行所有窗口操作\r\n2. 当创建内容视图时，系统应基于插件路径或内容类型确保唯一性\r\n3. 当在内容类型间切换时，系统应在创建新视图前正确处置之前的视图\r\n\r\n### 需求 8\r\n\r\n**用户故事：** 作为开发者，我希望系统能够智能管理 WebContentsView 的生命周期，以便提供最佳的性能和用户体验\r\n\r\n#### 验收标准\r\n\r\n1. 当插件支持后台运行时，系统应在插件关闭时保留 WebContentsView 但设置为隐藏状态\r\n2. 当插件不支持后台运行时，系统应在插件关闭时完全销毁 WebContentsView\r\n3. 当系统内存不足时，系统应优先回收长时间未使用的后台 WebContentsView\r\n\r\n### 需求 9\r\n\r\n**用户故事：** 作为用户，我希望搜索结果直接显示在搜索界面中，以便快速访问应用和命令\r\n\r\n#### 验收标准\r\n\r\n1. 当我在搜索框中输入时，系统应在搜索头部下方显示搜索结果\r\n2. 当显示搜索结果时，系统应允许键盘导航和选择\r\n3. 当我选择搜索结果时，系统应执行相应操作并清除搜索\r\n\r\n## 非功能性需求\r\n\r\n### 代码架构和模块化\r\n\r\n- **单一职责原则**：窗口管理逻辑应与 UI 组件隔离\r\n- **模块化设计**：为 BaseWindow 管理、WebContentsView 处理和窗口生命周期创建独立的类\r\n- **依赖管理**：最小化窗口管理与应用逻辑之间的耦合\r\n- **清晰接口**：为窗口创建、管理和清理定义清晰的 API\r\n\r\n### 性能\r\n\r\n- 窗口操作应具有响应性，响应时间 < 100ms\r\n- 在内容视图间切换时内存使用量不应增加\r\n- 插件加载不应阻塞主界面\r\n\r\n### 安全性\r\n\r\n- 插件内容应在 WebContentsView 内正确沙箱化\r\n- 分离的窗口应保持与嵌入式视图相同的安全上下文\r\n\r\n### 可靠性\r\n\r\n- 窗口管理应优雅地处理插件崩溃\r\n- 应用应从窗口管理错误中正确恢复\r\n- 资源清理应是自动且全面的\r\n\r\n### 可用性\r\n\r\n- 窗口过渡应平滑且视觉连贯\r\n- 键盘快捷键应在所有窗口状态下一致工作\r\n- 用户界面应为窗口操作提供清晰的视觉反馈\r\n",
  "fileStats": {
    "size": 6663,
    "lines": 151,
    "lastModified": "2025-09-27T03:44:07.653Z"
  },
  "comments": []
}